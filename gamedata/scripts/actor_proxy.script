--[[------------------------------------------------------------------------------------------------------------------
    Класс "actor_proxy". Необходим для работы с актёром, его состоянием и информацией.
    Модифицировал: Nemessa (14.12.2024)
--------------------------------------------------------------------------------------------------------------------]]
class "actor_proxy"

-- Конструктор
function actor_proxy:__init()
    self.initialized = false
end

-- Инициализация
-- Настраивает состояние актора.
function actor_proxy:init()
    if not self.initialized then
        --printf("actor_proxy: init")
        self.online = false
        self.alife = alife()
        if self.alife then
            self.actor_id = self.alife:actor().id
        else
            self.actor_id = nil
        end
        self.actor = nil
        self.initialized = true
    end
end
    
-- Деинициализация
-- Очищает ресурсы и состояние актора.
function actor_proxy:deinit()
    if self.initialized then
        --printf("actor_proxy: deinit")
        self.alife = nil
        self.actor = nil
        self.initialized = false
    end
end

-- Возвращает ID актора
function actor_proxy:id()
    self:init()
    return self.actor_id
end

-- Проверяет, есть ли информация
function actor_proxy:has_info(name)
    self:init()
    return has_alife_info(name)
end

-- Проверяет, нет ли информации
function actor_proxy:dont_has_info(name)
    self:init()
    if self.online then
        --printf("actor_proxy: dont_has_info online: info=%s", name)
        return not has_alife_info(name)
    else
        --printf("actor_proxy: dont_has_info offline: info=%s", name)
        return not has_alife_info(self.actor_id, name)
    end
end

-- Спавнит объект
function actor_proxy:net_spawn(obj)
    self:init()
    self.online = true
    self.actor = obj
end

-- Уничтожает объект
function actor_proxy:net_destroy()
    self:init()
    self.online = false
    self.actor = nil
end
